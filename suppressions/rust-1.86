{
   Rust 1.86 standard library
   Memcheck:Leak
   match-leak-kinds: possible
   fun:malloc
   fun:alloc
   fun:alloc_impl
   fun:allocate
   fun:{closure#0}<std::thread::Inner>
   fun:allocate_for_layout<core::mem::maybe_uninit::MaybeUninit<std::thread::Inner>, alloc::sync::{impl#*}::new_uninit::{closure_env#0}<std::thread::Inner>, fn(*mut u8) -> *mut alloc::sync::ArcInner<core::mem::maybe_uninit::MaybeUninit<std::thread::Inner>>>
   fun:new_uninit<std::thread::Inner>
   fun:_ZN3std6thread6Thread3new*
   fun:_ZN3std6thread7current12init_current*
   fun:current_or_unnamed
}
